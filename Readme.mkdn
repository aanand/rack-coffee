# rack-coffee

Simple rack middleware for serving up [CoffeeScript][coffeescript] files as compiled javascript.

## Usage

The options behave similarly to Rack::Static:
    
    require 'rack/coffee'
    use Rack::Coffee, {
        :root => '/path/to/directory/above/url',  # defaults to Dir.pwd
        :urls => '/javascipts'                     # defaults to '/javascripts'
    }

By default, rack/coffee will use a Rack::File to serve any static assets found in this path; you may give `:static => false` to have misses pass through to your app.

For rails, presuming you've required 'rack/coffee' somehow, stick this in the Rails initializer config block:

    config.middleware.use Rack::Coffee, :root => "#{RAILS_ROOT}/public"

Note however that by default this will not play nicely with `javascript_include_tag`'s `:cache` option, you would need to compile your .coffee files before deploying. Alternately, check out the [BistroCar][bistrocar] rails plugin that plays nicely with rails asset handling.

## Bugs?

* Let me know here: [Issue Tracking][issues]

## Requirements

* coffee-script
* rack

## History

* January 27, 2010: release 0.1.1
    * remove dependency on Pathname, oh if only it were stdlib instead of extlib

* January 26, 2010: First public release 0.1.

## Copyright

Copyright (C) 2010 Matthew Lyon <matt@flowerpowered.com>

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to
deal in the Software without restriction, including without limitation the
rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
sell copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER 
IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

[coffeescript]: http://jashkenas.github.com/coffee-script/
[bistrocar]: http://github.com/jnicklas/bistro_car
[issues]: http://github.com/mattly/rack-coffee/issues
